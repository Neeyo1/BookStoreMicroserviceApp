services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=zaq1@WSX
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - 27017:27017
    volumes:
      - /data/db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass secretpassword
    volumes: 
      - /data/redis
  book-store-book-svc:
    image: neeyo/book-store-book-svc:latest
    build: 
      context: .
      dockerfile: src/BookService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User ID=postgres;Password=zaq1@WSX;Database=books
      - IdentityServiceUrl=http://book-store-identity-svc
    ports:
      - 7001:80
    depends_on:
      - postgres
      - rabbitmq
  book-store-search-svc:
    image: neeyo/book-store-search-svc:latest
    build: 
      context: .
      dockerfile: src/SearchService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:password@mongodb
      - Redis_Host=redis
      - Redis_Password=secretpassword
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq
      - redis
  book-store-cart-svc:
    image: neeyo/book-store-cart-svc:latest
    build: 
      context: .
      dockerfile: src/CartService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User ID=postgres;Password=zaq1@WSX;Database=carts
      - IdentityServiceUrl=http://book-store-identity-svc
    ports:
      - 7003:80
    depends_on:
      - postgres
      - rabbitmq
  book-store-purchase-svc:
    image: neeyo/book-store-purchase-svc:latest
    build: 
      context: .
      dockerfile: src/PurchaseService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:password@mongodb
      - IdentityServiceUrl=http://book-store-identity-svc
    ports:
      - 7004:80
    depends_on:
      - mongodb
      - rabbitmq
  book-store-identity-svc:
    image: neeyo/book-store-identity-svc:latest
    build: 
      context: .
      dockerfile: src/IdentityService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - IssuerUri=https://id.bookstore.local
      - ClientApp=https://app.bookstore.local
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User ID=postgres;Password=zaq1@WSX;Database=identity
      - VIRTUAL_HOST=id.bookstore.local
    depends_on:
      - postgres
  book-store-gateway-svc:
    image: neeyo/book-store-gateway-svc:latest
    build: 
      context: .
      dockerfile: src/GatewayService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=https://app.bookstore.local
      - VIRTUAL_HOST=api.bookstore.local
  book-store-web-app:
    image: neeyo/book-store-web-app:latest
    build: 
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data
    environment:
      - AUTH_SECRET="f942Ie7ecRbG2tQolecSHlU/QxLBtKChE2JMxovhYbQ="
      - API_URL=http://book-store-gateway-svc
      - ID_URL=https://id.bookstore.local
      - ID_URL_INTERNAL=http://book-store-identity-svc
      - AUTH_URL=https://app.bookstore.local
      - AUTH_URL_INTERNAL=http://web-app:3000
      - VIRTUAL_HOST=app.bookstore.local
      - VIRTUAL_PORT=3000
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs